import { useState, useEffect, useRef } from 'react'
import { Ticket, Calendar, Send, Volume2, VolumeX, Maximize2, X, Waves, Phone, MessageCircle } from 'lucide-react'
import './App.css'
import AnimatedMedia from '@/components/AnimatedMedia.jsx'

// Import video assets
import bgVideo from '/bgvideo.mp4'
import posterVideo from '/poster.webm'
import circleVideo1 from '/circle1.mp4'
import circleVideo2 from '/circle2.mp4'
import logoImage from '/logozhara.png'

function App() {
  const [showTicketMenu, setShowTicketMenu] = useState(false)
  const [selectedEvent, setSelectedEvent] = useState(null)
  const [eventVideoMuted, setEventVideoMuted] = useState(true)
  const [showFullscreenVideo, setShowFullscreenVideo] = useState(false)
  const [showBookingSubmenu, setShowBookingSubmenu] = useState(false)
  const [showSplash, setShowSplash] = useState(true)
  const [bubblesAnimation, setBubblesAnimation] = useState(true)
  const [circleVideoMuted, setCircleVideoMuted] = useState(true)
  const [circleVideoSrc, setCircleVideoSrc] = useState(null)
  const bookingBtnRef = useRef(null)
  const submenuRef = useRef(null)
  const circleVideoRef = useRef(null)


  useEffect(() => {
    // Set Telegram WebApp header color to summer blue
    if (window.Telegram && window.Telegram.WebApp) {
      window.Telegram.WebApp.setHeaderColor('#0099ff');
    }
    
    // Dispatch custom userGesture event on first actual user interaction to unlock videos
    const gestureHandler = () => {
      window.dispatchEvent(new Event('userGesture'));
    };
    document.addEventListener('pointerdown', gestureHandler, { once: true });
    
    // Hide splash screen after 3 seconds
    const splashTimer = setTimeout(() => {
      setShowSplash(false);
    }, 3000);
    
    // Randomly select circle video
    setCircleVideoSrc(Math.random() < 0.5 ? circleVideo1 : circleVideo2);
    
    return () => {
      clearTimeout(splashTimer);
    };
  }, [])

  useEffect(() => {
    function handleClickOutside(e) {
      if (showBookingSubmenu && 
          bookingBtnRef.current && 
          !bookingBtnRef.current.contains(e.target) &&
          submenuRef.current &&
          !submenuRef.current.contains(e.target)) {
        setShowBookingSubmenu(false)
      }
    }
    document.addEventListener('mousedown', handleClickOutside)
    return () => document.removeEventListener('mousedown', handleClickOutside)
  }, [showBookingSubmenu])

  const events = [
    {
      id: 'july25',
      title: '–ñ–ê–†–ê | 25.07',
      date: '25 –∏—é–ª—è, –ø—è—Ç–Ω–∏—Ü–∞',
      time: '23:00 - 07:00',
      fullDate: new Date('2025-07-25T23:00:00'),
      description: `–ù—É —á—Ç–æ, –≥–æ—Ç–æ–≤—ã –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –ª–µ—Ç—É? ‚òÄÔ∏è

–ü–æ–∫–∞ –ø–æ–≥–æ–¥–∞ –≤ –ü–∏—Ç–µ—Ä–µ –Ω–µ —Ä–∞–¥—É–µ—Ç VNVNC –±–µ—Ä–µ—Ç –≤—Å—ë –≤ —Å–≤–æ–∏ —Ä—É–∫–∏ —Å–æ–∑–¥–∞—ë—Ç –Ω–∞—Å—Ç–æ—è—â—É—é –ñ–ê–†–£!

–ö–∞–∂–¥—ã–π —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –±—É–¥–µ—Ç –ø—Ä–æ–ø–∏—Ç–∞–Ω –≤–∞–π–±–æ–º –ø–æ–ª–Ω–æ–≥–æ –æ—Ç—Ä—ã–≤–∞. üï∂Ô∏è

–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ:

–ú–∞—Å—à—Ç–∞–±–Ω–∞—è –ø–µ–Ω–Ω–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞ –ø—Ä—è–º–æ –≤ —Ü–µ–Ω—Ç—Ä–µ –∑–∞–ª–∞, –∏ –±–∞—Å—Å–µ–π–Ω —Å —à–∞—Ä–∏–∫–∞–º–∏ ‚Äì —Ç–µ–ø–µ—Ä—å —ç—Ç–æ –≤–∞—à–∞ –Ω–æ–≤–∞—è –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏—è, —Ç–æ–ª—å–∫–æ –±–µ–∑ –¥—É—à–Ω—ã—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤. ü´ß

–ü—Ä–æ—Å—Ç–æ –∑–∞–±—É–¥—å—Ç–µ –æ —Å–∫—É–∫–µ –∏ –ø–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ —ç—Ç–æ—Ç –±–µ–∑—É–º–Ω—ã–π –≤–∞–π–±, –≥–¥–µ –∫–∞–∂–¥—ã–π —É–≥–æ–ª–æ–∫ VNVNC —Å—Ç–∞–Ω–µ—Ç –∑–æ–Ω–æ–π –æ—Ç—Ä—ã–≤–∞. 

–ì–æ—Ç–æ–≤—ã –ø—Ä–æ–∂–∞—Ä–∏—Ç—å—Å—è –ø–æ –ø–æ–ª–Ω–æ–π? ü§©

üí∏–ë–∏–ª–µ—Ç—ã —Ç—É—Ç

FC/DC 18+

–° —Å–æ–±–æ–π –æ—Ä–∏–≥–∏–Ω–∞–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–µ –ª–∏—á–Ω–æ—Å—Ç—å. 

(–ü–∞—Å–ø–æ—Ä—Ç/–ø—Ä–∞–≤–∞/–≤–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç)

*–±–∏–ª–µ—Ç –∏ –Ω–∞–ª–∏—á–∏–µ –±—Ä–æ–Ω–∏ —Å—Ç–æ–ª–æ–≤ –¥–∞–µ—Ç –ø—Ä–∞–≤–æ –ø—Ä–æ–π—Ç–∏ –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏, –Ω–æ –Ω–µ –æ—Ç–º–µ–Ω—è–µ—Ç FC 

üìç–ö–æ–Ω—é—à–µ–Ω–Ω–∞—è 2–í`,
      poster: posterVideo,
      video: posterVideo,
      tcEvent: '687267a052cc6634496104ba',
      tcToken: 'eyJhbGciOiJIUzI1NiIsImlzcyI6InRpY2tldHNjbG91ZC5ydSIsInR5cCI6IkpXVCJ9.eyJwIjoiNjMyMDZlZTc4NzQ5MDk3YzU5MmE2Njk3In0.o8XKf5PO_f33Eg3RIeUe2PYBEeuy4o2yI4vh6qQ21T8',
      activities: [
        '–ü–µ–Ω–Ω–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞ ü´ß',
        '–°–ø–µ—à–∞–ª –∫–æ–∫—Ç–µ–π–ª–∏ üç∏',
        '–§–æ—Ç–æ–∑–æ–Ω–∞ üì∏',
        '–í–æ–¥–Ω—ã–µ –ø–∏—Å—Ç–æ–ª–µ—Ç—ã üî´'
      ]
    },
    {
      id: 'july26',
      title: '–ñ–ê–†–ê | 26.07',
      date: '26 –∏—é–ª—è, —Å—É–±–±–æ—Ç–∞',
      time: '23:00 - 07:00',
      fullDate: new Date('2025-07-26T23:00:00'),
      description: `–í—Ç–æ—Ä–æ–π –¥–µ–Ω—å –æ–±–µ—â–∞–µ—Ç –±—ã—Ç—å –µ—â–µ –±–æ–ª–µ–µ –∂–∞—Ä–∫–∏–º!

–≠—Ç–æ—Ç –¥–µ–Ω—å —Ç–æ—á–Ω–æ –Ω–µ –∑–∞–±—É–¥–µ—Ç—Å—è:

‚Äî –ú–∞—Å—à—Ç–∞–±–Ω–∞—è –ø–µ–Ω–Ω–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞ ‚Äî –ø–æ–≥—Ä—É–∑–∏—Ç–µ—Å—å –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –ª–µ—Ç–Ω–µ–≥–æ –≤–∞–π–±–∞! –ü–µ–Ω–∞, –º—É–∑—ã–∫–∞ –∏ –º–Ω–æ–≥–æ –≤–µ—Å–µ–ª—å—è! ü´ß

‚Äî –®–æ—É –º—ã–ª—å–Ω—ã—Ö –ø—É–∑—ã—Ä–µ–π ‚Äî –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ—Ç —á–µ–ª–æ–≤–µ–∫–∞-–Ω–µ–≤–∏–¥–∏–º–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∂–µ—Ç –º—ã–ª—å–Ω—ã–µ –ø—É–∑—ã—Ä–∏ —Ç–∞–∫, –∫–∞–∫ —Ç—ã –Ω–∏–∫–æ–≥–¥–∞ —Ä–∞–Ω—å—à–µ –Ω–µ –≤–∏–¥–µ–ª! ü•∞

‚Äî –ü–µ—Ä—Ñ–æ–º–∞–Ω—Å –Ω–∞ —Å—Ü–µ–Ω–µ ‚Äî –∏–º–º–µ—Ä—Å–∏–≤–Ω–æ–µ —à–æ—É —Å –±–∞—Å—Å–µ–π–Ω–æ–º –∏–∑ —à–∞—Ä–∏–∫–æ–≤ –∏ –≤–æ–¥–Ω—ã–º–∏ –ø–∏—Å—Ç–æ–ª–µ—Ç–∞–º–∏. –≠—Ç–æ —Ç–æ—á–Ω–æ –Ω–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –Ω–µ–∑–∞–º–µ—á–µ–Ω–Ω—ã–º, –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º! ü§©

‚Äî –§–æ—Ç–æ–∑–æ–Ω–∞ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–π –º–æ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –æ–Ω –æ—Å—Ç–∞–ª—Å—è —Å —Ç–æ–±–æ–π –Ω–∞–≤—Å–µ–≥–¥–∞.

‚Äî –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–∫—Ç–µ–π–ª–∏ ‚Äî –ø–µ–π –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π –∂–∞—Ä–∫–æ–≥–æ –ª–µ—Ç–∞! üì∏

FC/DC 18+

–° —Å–æ–±–æ–π –æ—Ä–∏–≥–∏–Ω–∞–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É–¥–æ—Å—Ç–æ–≤–µ—Ä—è—é—â–∏–µ –ª–∏—á–Ω–æ—Å—Ç—å.

(–ü–∞—Å–ø–æ—Ä—Ç/–ø—Ä–∞–≤–∞/–≤–æ–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç)

*–±–∏–ª–µ—Ç –∏ –Ω–∞–ª–∏—á–∏–µ –±—Ä–æ–Ω–∏ —Å—Ç–æ–ª–æ–≤ –¥–∞–µ—Ç –ø—Ä–∞–≤–æ –ø—Ä–æ–π—Ç–∏ –±–µ–∑ –æ—á–µ—Ä–µ–¥–∏, –Ω–æ –Ω–µ –æ—Ç–º–µ–Ω—è–µ—Ç FC

üìç–ö–æ–Ω—é—à–µ–Ω–Ω–∞—è 2–í`,
      poster: posterVideo,
      video: posterVideo,
      tcEvent: '687268af20e08ad668516801',
      tcToken: 'eyJhbGciOiJIUzI1NiIsImlzcyI6InRpY2tldHNjbG91ZC5ydSIsInR5cCI6IkpXVCJ9.eyJwIjoiNjMyMDZlZTc4NzQ5MDk3YzU5MmE2Njk3In0.o8XKf5PO_f33Eg3RIeUe2PYBEeuy4o2yI4vh6qQ21T8',
      activities: [
        '–ú–∞—Å—à—Ç–∞–±–Ω–∞—è –ø–µ–Ω–Ω–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞ ü´ß',
        '–®–æ—É –º—ã–ª—å–Ω—ã—Ö –ø—É–∑—ã—Ä–µ–π ü•∞',
        '–ü–µ—Ä—Ñ–æ–º–∞–Ω—Å —Å –±–∞—Å—Å–µ–π–Ω–æ–º –∏–∑ —à–∞—Ä–∏–∫–æ–≤ ü§©',
        '–í–æ–¥–Ω—ã–µ –ø–∏—Å—Ç–æ–ª–µ—Ç—ã üî´',
        '–§–æ—Ç–æ–∑–æ–Ω–∞ üì∏',
        '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–∫—Ç–µ–π–ª–∏ üç∏'
      ]
    }
  ]

  const handleTicketClick = () => {
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
    setShowTicketMenu(true)
  }

  const handleEventSelect = (event) => {
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
    setSelectedEvent(event)
    setShowTicketMenu(false)
    setEventVideoMuted(true)
  }

  const handleBookingClick = () => {
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
    setShowBookingSubmenu(!showBookingSubmenu);
  }

  const openPhoneNumber = () => {
    window.Telegram?.WebApp?.HapticFeedback?.impactOccurred('light');
    if (window.Telegram?.WebApp && window.Telegram.WebApp.initData) {
      window.Telegram.WebApp.openTelegramLink('https://t.me/iv?url=tel:+79214104440');
    } else {
      window.location.href = 'tel:+79214104440';
    }
    setShowBookingSubmenu(false);
  }

  const openTelegramBot = () => {
    window.Telegram?.WebApp?.HapticFeedback?.impactOccurred('light');
    if (window.Telegram?.WebApp && window.Telegram.WebApp.initData) {
      window.Telegram.WebApp.openTelegramLink('https://t.me/vnvncbattlebot');
    } else {
      window.open('https://t.me/vnvncbattlebot', '_blank');
    }
    setShowBookingSubmenu(false);
  }

  const openTelegramChannel = () => {
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
    if (window.Telegram?.WebApp && window.Telegram.WebApp.initData) {
      window.Telegram.WebApp.openTelegramLink('https://t.me/vnvnc_club');
    } else {
      window.open('https://t.me/vnvnc_club', '_blank');
    }
  }


  const toggleEventMute = () => {
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
    setEventVideoMuted(!eventVideoMuted)
  }

  const showFullscreen = () => {
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
    setShowFullscreenVideo(true)
  }

  const closeFullscreenVideo = () => {
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
    setShowFullscreenVideo(false)
  }

  const toggleCircleVideoMute = () => {
    if (window.Telegram?.WebApp?.HapticFeedback) {
      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
    }
    setCircleVideoMuted(!circleVideoMuted)
  }

  return (
    <>
      {/* Splash Screen */}
      {showSplash && (
        <div className="splash-screen">
          <div className="splash-content">
            <h1 className="splash-title">–ñ–ê–†–ê</h1>
            <p className="splash-subtitle">25-26 –ò–Æ–õ–Ø</p>
            <div className="splash-waves">
              <Waves size={48} />
            </div>
          </div>
        </div>
      )}

      {/* Background Video */}
      <video 
        className="background-video"
        src={bgVideo}
        autoPlay
        loop
        muted
        playsInline
      />

      {/* Animated Bubbles */}
      {bubblesAnimation && (
        <div className="bubbles-container">
          {[...Array(20)].map((_, i) => (
            <div 
              key={i} 
              className="bubble" 
              style={{
                left: `${Math.random() * 100}%`,
                animationDelay: `${Math.random() * 5}s`,
                animationDuration: `${5 + Math.random() * 5}s`
              }}
            />
          ))}
        </div>
      )}

      {/* Circle Video */}
      {circleVideoSrc && (
        <div className={`circle-video-container ${!circleVideoMuted ? 'expanded' : ''}`}>
          <video 
            ref={circleVideoRef}
            className="circle-video"
            src={circleVideoSrc}
            autoPlay
            loop
            muted={circleVideoMuted}
            playsInline
            onClick={toggleCircleVideoMute}
          />
          <div className="circle-video-overlay" onClick={toggleCircleVideoMute}>
            {circleVideoMuted ? <VolumeX size={24} /> : <Volume2 size={24} />}
          </div>
        </div>
      )}

      {/* Main Content Container */}
      <div className="app-container">
        {/* Summer Logo */}
        <div className="summer-logo">
          <img src={logoImage} alt="VNVNC –ñ–ê–†–ê" className="logo-image" />
        </div>

        {/* Main Buttons */}
        <div className="main-buttons">
          <button className="summer-button ticket-button" onClick={handleTicketClick}>
            <Ticket size={24} className="button-icon" />
            <span>–ë–ò–õ–ï–¢–´</span>
          </button>
          
          <button className="summer-button booking-button" onClick={handleBookingClick} ref={bookingBtnRef}>
            <Calendar size={24} className="button-icon" />
            <span>–ë–†–û–ù–¨ –°–¢–û–õ–û–í</span>
          </button>

          <button className="summer-button telegram-button" onClick={openTelegramChannel}>
            <Send size={24} className="button-icon" />
            <span>TELEGRAM</span>
          </button>
        </div>

        {/* Booking Submenu */}
        {showBookingSubmenu && (
          <div className="booking-submenu" ref={submenuRef}>
            <button onClick={openPhoneNumber} className="submenu-item">
              <Phone size={20} />
              <span>–ü–æ–∑–≤–æ–Ω–∏—Ç—å</span>
            </button>
            <button onClick={openTelegramBot} className="submenu-item">
              <MessageCircle size={20} />
              <span>Telegram –±–æ—Ç</span>
            </button>
          </div>
        )}

      </div>

      {/* Ticket Menu */}
      {showTicketMenu && (
        <div className="ticket-menu-overlay" onClick={() => setShowTicketMenu(false)}>
          <div className="ticket-menu" onClick={(e) => e.stopPropagation()}>
            <div className="ticket-menu-header">
              <h2>–í–´–ë–ï–†–ò–¢–ï –î–ï–ù–¨</h2>
              <button className="close-button" onClick={() => setShowTicketMenu(false)}>
                <X size={24} />
              </button>
            </div>
            <div className="events-list">
              {events.map(event => (
                <button 
                  key={event.id} 
                  className="event-item"
                  onClick={() => handleEventSelect(event)}
                >
                  <h3>{event.title}</h3>
                  <p>{event.date}</p>
                  <p className="event-time">{event.time}</p>
                </button>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* Selected Event Details */}
      {selectedEvent && (
        <div className="event-details-overlay" onClick={() => setSelectedEvent(null)}>
          <div className="event-details" onClick={(e) => e.stopPropagation()}>
            <button className="close-button" onClick={() => setSelectedEvent(null)}>
              <X size={24} />
            </button>
            
            <div className="event-video-container">
              <AnimatedMedia 
                className="event-video"
                mediaSrc={selectedEvent.video}
                isVideo={true}
                muted={eventVideoMuted}
                loop={true}
                autoPlay={true}
              />
              <div className="video-controls">
                <button onClick={toggleEventMute} className="control-button">
                  {eventVideoMuted ? <VolumeX size={20} /> : <Volume2 size={20} />}
                </button>
                <button onClick={showFullscreen} className="control-button">
                  <Maximize2 size={20} />
                </button>
              </div>
            </div>
            
            <div className="event-info">
              <h3 className="event-title">{selectedEvent.title}</h3>
              <p className="event-date-time">{selectedEvent.date} –≤ {selectedEvent.time}</p>
              
              {selectedEvent.activities && (
                <div className="activities-section">
                  <h4>–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:</h4>
                  <ul className="activities-list">
                    {selectedEvent.activities.map((activity, index) => (
                      <li key={index}>{activity}</li>
                    ))}
                  </ul>
                </div>
              )}
              
              <p className="event-description">{selectedEvent.description}</p>
              
              <div 
                data-tc-event={selectedEvent.tcEvent}
                data-tc-token={selectedEvent.tcToken}
                style={{ display: 'block', width: '100%' }}
              >
                <button 
                  className="buy-ticket-button"
                  style={{ width: '100%' }}
                  onTouchStart={() => {
                    if (window.Telegram?.WebApp?.HapticFeedback) {
                      window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
                    }
                  }}
                >
                  –ö–£–ü–ò–¢–¨ –ë–ò–õ–ï–¢
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Fullscreen Video */}
      {showFullscreenVideo && selectedEvent && (
        <div className="fullscreen-video-overlay">
          <button className="fullscreen-close" onClick={closeFullscreenVideo}>
            <X size={24} />
          </button>
          <video 
            className="fullscreen-video"
            src={selectedEvent.video}
            autoPlay
            loop
            muted={eventVideoMuted}
            playsInline
            controls
          />
        </div>
      )}

    </>
  )
}

export default App